golef_cors
        
{
    
    vec3 q1 = p;
    
    q1 -= vec3(0,0,0);
    q1 = rotateVec3(q1,vec3(0.0, 0.0, 0.0));
    
    vec3 q2 = q1;
    
    q2 -= vec3(0,0,0);
    q2 = rotateVec3(q2,vec3(0.0, 0.0, 0.0));
    
    vec3 q3 = q2;
    
    q3 -= vec3(0,0,0);
    q3 = rotateVec3(q3,vec3(0.0, 0.0, 0.0));
    
    vec3 q4 = q3;
    
    q4 -= vec3(0,0,-30);
    q4 = rotateVec3(q4,vec3(0.0, 0.0, 0.0));
    
    float s4 = sdBox(q4,vec3(30.0, 1.5, 1.0));
    
    vec3 q5 = q3;
    
    q5 -= vec3(0,0,30);
    q5 = rotateVec3(q5,vec3(0.0, 0.0, 0.0));
    
    float s5 = sdBox(q5,vec3(30.0, 1.5, 1.0));
    
float s3 = opUnion(s4,s5);

    vec3 q6 = q2;
    
    q6 -= vec3(0,0,0);
    q6 = rotateVec3(q6,vec3(0.0, 0.0, 0.0));
    
    vec3 q7 = q6;
    
    q7 -= vec3(-30,0,0);
    q7 = rotateVec3(q7,vec3(0.0, 0.0, 0.0));
    
    float s7 = sdBox(q7,vec3(1.0, 1.5, 30.0));
    
    vec3 q8 = q6;
    
    q8 -= vec3(30,0,0);
    q8 = rotateVec3(q8,vec3(0.0, 0.0, 0.0));
    
    float s8 = sdBox(q8,vec3(1.0, 1.5, 30.0));
    
float s6 = opUnion(s7,s8);

float s2 = opSmoothUnion(s3,s6,5);

    vec3 q9 = q1;
    
    q9 -= vec3(0,0,0);
    q9 = rotateVec3(q9,vec3(0.0, 0.0, 0.0));
    
    vec3 q10 = q9;
    
    q10 -= vec3(0,0,0);
    q10 = rotateVec3(q10,vec3(0.0, 0.0, 0.0));
    
        q10 = opLimitedRepetition(q10,vec3(0.5,0.5,5),vec3(0.5,0.5,5));
                    
    float s10 = sdBox(q10,vec3(1.0, 2.5, 1.0));
    
    vec3 q11 = q9;
    
    q11 -= vec3(0,2.5,0);
    q11 = rotateVec3(q11,vec3(0.0, 0.0, 0.0));
    
    float s11 = sdBox(q11,vec3(1.0, 1.0, 30.0));
    
float s9 = opSmoothUnion(s10,s11,2);

float s1 = opSmoothUnion(s2,s9,3);

        return s1;
}