hund
        
{
    
    vec3 q1 = p;
    
    q1 -= vec3(1.1,-0.4,-0.2);
    q1 = rotateVec3(q1,vec3(0.0, 0.34905556, 2.443389));
    
    vec3 q2 = q1;
    
    q2 -= vec3(0,0,0);
    q2 = rotateVec3(q2,vec3(0.0, 0.0, 0.0));
    
    float s2 = sdEllipsoid(q2,vec3(0.18,0.18,1.2));
    
    vec3 q3 = q1;
    
    q3 -= vec3(0,0,-1.3);
    q3 = rotateVec3(q3,vec3(0.0, 0.0, 0.0));
    
    vec3 q4 = q3;
    
    q4 -= vec3(0,0,-0.4);
    q4 = rotateVec3(q4,vec3(0.0, 0.0, 0.0));
    
    vec3 q5 = q4;
    
    q5 -= vec3(0,0,0);
    q5 = rotateVec3(q5,vec3(0.0, 0.0, 0.0));
    
    float s5 = sdEllipsoid(q5,vec3(0.07,0.07,0.3));
    
    vec3 q6 = q4;
    
    q6 -= vec3(0,0,0);
    q6 = rotateVec3(q6,vec3(0.0, 0.0, 0.0));
    
    vec3 q7 = q6;
    
    q7 -= vec3(0,-0.2,0.2);
    q7 = rotateVec3(q7,vec3(-0.61084723, 0.0, 0.0));
    
    float s7 = sdEllipsoid(q7,vec3(0.07,0.07,0.3));
    
    vec3 q8 = q6;
    
    q8 -= vec3(0,0.2,0.2);
    q8 = rotateVec3(q8,vec3(0.61084723, 0.0, 0.0));
    
    float s8 = sdEllipsoid(q8,vec3(0.07,0.07,0.3));
    
float s6 = opUnion(s7,s8);

float s4 = opUnion(s5,s6);

    vec3 q9 = q3;
    
    q9 -= vec3(0,0,0);
    q9 = rotateVec3(q9,vec3(0.0, 0.0, 0.0));
    
    float s9 = sdEllipsoid(q9,vec3(0.1,0.25,0.25));
    
float s3 = opSmoothUnion(s4,s9,0.04);

float s1 = opSmoothUnion(s2,s3,0.04);

        return s1;
}